<?xml version="1.0" encoding="utf-8"?>
<namespace name="MiscObj" platform="Win64">
  <const name="TMSPlatforms" type="Integer">
    <value>
      $1945F
    </value>
  </const>
  <const name="base64" type="TConvertType">
    <value>
      base64
    </value>
  </const>
  <const name="hexa" type="TConvertType">
    <value>
      hexa
    </value>
  </const>
  <const name="base64url" type="TConvertType">
    <value>
      base64url
    </value>
  </const>
  <const name="base32" type="TConvertType">
    <value>
      base32
    </value>
  </const>
  <const name="raw" type="TConvertType">
    <value>
      raw
    </value>
  </const>
  <const name="noUni" type="TUnicode">
    <value>
      noUni
    </value>
  </const>
  <const name="yesUni" type="TUnicode">
    <value>
      yesUni
    </value>
  </const>
  <enum name="TConvertType">
    <attributes>
      <attribute name="ComponentPlatformsAttribute" />
    </attributes>
    <element value="0" name="base64" />
    <element value="1" name="hexa" />
    <element value="2" name="base64url" />
    <element value="3" name="base32" />
    <element value="4" name="raw" />
  </enum>
  <enum name="TUnicode">
    <element value="0" name="noUni" />
    <element value="1" name="yesUni" />
  </enum>
  <class name="TConvert">
    <ancestor name="TTMSCryptBase" namespace="CryptBase">
      <methodref name="GetVersion" visibility="published" />
      <methodref name="SetVersion" visibility="published" />
      <methodref name="GetVersionNr" visibility="protected" procflags="virtual" />
      <propertyref name="Version" visibility="published" />
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="PaletteCreated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="CPP_ABI_1" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="CPP_ABI_2" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="CPP_ABI_3" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FType" type="TConvertType" visibility="private" size="1" offset="120" />
      <function name="NormalizeFormat" visibility="private">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public">
        <parameters>
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AType" type="TConvertType" />
        </parameters>
      </constructor>
      <function name="CharToFormat" visibility="public">
        <parameters>
          <parameter name="charstring" type="PAnsiChar" />
          <parameter name="charlen" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="FormatToChar" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="PAnsiChar" />
        </parameters>
      </function>
      <function name="UnicodeToPAnsiChar" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="PAnsiChar" />
        </parameters>
      </function>
      <function name="PAnsiCharFromUnicodeLength" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="StringToBuffer" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <parameter name="u" type="TUnicode" />
          <parameter name="msgLen" type="Integer" paramflags="var" />
          <retval type="PAnsiChar" />
        </parameters>
      </function>
      <function name="StringToBufferA" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <parameter name="u" type="TUnicode" />
          <retval type="PAnsiChar" />
        </parameters>
      </function>
      <function name="StringToPAnsiChar" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="PAnsiChar" />
        </parameters>
      </function>
      <function name="UnicodeStringToFormat" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="FormatToUnicodeString" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="StringToByteArray" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="TArray&lt;System.Byte&gt;" />
        </parameters>
      </function>
      <function name="TestUnicode" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="StringToUnicode" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="StringToFormat" visibility="public">
        <parameters>
          <parameter name="charstring" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="FormatToString" visibility="public">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="OutputFormatLength" visibility="public">
        <parameters>
          <parameter name="charlen" type="Integer" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="CharLength" visibility="public">
        <parameters>
          <parameter name="charstring" type="string" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Base64ToHexa" visibility="public">
        <parameters>
          <parameter name="base64String" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="HexaToBase64" visibility="public">
        <parameters>
          <parameter name="hexaString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base64ToBase64url" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base64urlToBase64" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base64urlToHexa" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="HexaToBase64url" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base32ToHexa" visibility="public">
        <parameters>
          <parameter name="base32String" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="HexaToBase32" visibility="public">
        <parameters>
          <parameter name="hexaString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base32ToBase64url" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base64urlToBase32" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base32ToBase64" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base64ToBase32" visibility="public">
        <parameters>
          <parameter name="inString" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="KeyRSAOpenSSLToKeyTRSAEncSign" visibility="public">
        <parameters>
          <parameter name="strKey" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="KeyTRSAEncSignToKeyRSAOpenSSL" visibility="public">
        <parameters>
          <parameter name="strKey" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base58Encode" visibility="public">
        <parameters>
          <parameter name="value" type="UInt64" paramflags="const" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Base58Decode" visibility="public">
        <parameters>
          <parameter name="encoded" type="string" paramflags="const" />
          <retval type="UInt64" />
        </parameters>
      </function>
      <function name="TBytesToString" visibility="public">
        <parameters>
          <parameter name="t" type="TBytes" paramflags="const" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="StringToTBytes" visibility="public">
        <parameters>
          <parameter name="str" type="string" paramflags="const" />
          <retval type="TBytes" />
        </parameters>
      </function>
      <function name="RandomString" visibility="public">
        <parameters>
          <parameter name="len" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <property name="AType" visibility="published" read="FType" write="FType" type="TConvertType" default="1" />
    </members>
  </class>
  <class name="ECryptoPack">
    <ancestor name="Exception" namespace="System.SysUtils">
      <methodref name="Create@" visibility="class private" procflags="class constructor noself">
      </methodref>
      <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
      </methodref>
      <methodref name="SetInnerException" visibility="protected">
      </methodref>
      <methodref name="SetStackInfo" visibility="protected">
      </methodref>
      <methodref name="GetStackTrace" visibility="protected">
      </methodref>
      <methodref name="RaisingException" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateFmt" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateRes" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateRes" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmt" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmt" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateHelp" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateFmtHelp" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateResHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="GetBaseException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="override">
      </methodref>
      <propertyref name="BaseException" visibility="public">
      </propertyref>
      <propertyref name="HelpContext" visibility="public">
      </propertyref>
      <propertyref name="InnerException" visibility="public">
      </propertyref>
      <propertyref name="Message" visibility="public">
      </propertyref>
      <propertyref name="StackTrace" visibility="public">
      </propertyref>
      <propertyref name="StackInfo" visibility="public">
      </propertyref>
      <methodref name="RaiseOuterException" visibility="public" procflags="static">
      </methodref>
      <methodref name="ThrowOuterException" visibility="public" procflags="static">
      </methodref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="CPP_ABI_1" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="CPP_ABI_2" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="CPP_ABI_3" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
    <members>
      <field name="FCode" type="Integer" visibility="private" size="4" offset="48" />
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="Code" type="Integer" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="errorMessag" type="string" />
        </parameters>
      </constructor>
      <property name="Code" visibility="public" read="FCode" type="Integer" />
    </members>
  </class>
  <function name="RandomBuffer" visibility="external public" callconv="cdecl">
    <parameters>
      <parameter name="len" type="Integer" />
      <parameter name="MyBuffer" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="RandomUBuffer" visibility="external public" callconv="cdecl">
    <parameters>
      <parameter name="len" type="Integer" />
      <parameter name="MyBuffer" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="RandomInt" visibility="external public" callconv="cdecl">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="RandomUInt" visibility="external public" callconv="cdecl">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="PosExZ" visibility="public">
    <parameters>
      <parameter name="SubString" type="string" paramflags="const" />
      <parameter name="s" type="string" paramflags="const" />
      <parameter name="StartIndex" type="Integer" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CharToHexa" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="charstring" type="PAnsiChar" />
      <parameter name="lenCharString" type="Integer" />
      <parameter name="hexaString" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="HexaToChar" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="hexaString" type="PAnsiChar" />
      <parameter name="charstring" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="Base64ToChar" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="base64String" type="PAnsiChar" />
      <parameter name="charstring" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CharToBase64" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="charstring" type="PAnsiChar" />
      <parameter name="lenCharString" type="Integer" />
      <parameter name="base64String" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="Base32ToChar" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="base32String" type="PAnsiChar" />
      <parameter name="charstring" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CharToBase32" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="charstring" type="PAnsiChar" />
      <parameter name="lenCharString" type="Integer" />
      <parameter name="base32String" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="Base64urlToChar" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="base64String" type="PAnsiChar" />
      <parameter name="charstring" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CharToBase64url" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="charstring" type="PAnsiChar" />
      <parameter name="lenCharString" type="Integer" />
      <parameter name="base64String" type="PAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <procedure name="ErrorMessage" visibility="public" callconv="cdecl">
    <parameters>
      <parameter name="error" type="Integer" />
      <parameter name="message" type="PAnsiChar" />
    </parameters>
  </procedure>
</namespace>
